{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sort","setSort","rev","setRev","visibleGoods","goods","typeSort","reverse","cloneGoods","a","b","localeCompare","length","sortWithRevers","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BK,IAAMC,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,oBAAS,GAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACMC,EA3BR,SAAwBC,EAAOC,EAAUC,GACvC,IAAIC,EAAU,YAAOH,GAErB,OAAQC,GACN,IAAK,UACHE,EAAWR,MAAK,SAACS,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC3C,MACF,IAAK,aACHF,EAAWR,MAAK,SAACS,EAAGC,GAAJ,OAAWD,EAAEG,OAASF,EAAEE,UACxC,MACF,IAAK,GACHJ,EAAU,YAAOH,GAUrB,OAJIE,GACFC,EAAWD,UAGNC,EAMcK,CAAehB,EAAiBG,EAAME,GAE3D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAqB,YAAThB,IAChBiB,QAAS,kBAAMhB,EAAQ,YAJzB,iCASA,wBACEc,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAqB,eAAThB,IAChBiB,QAAS,kBAAMhB,EAAQ,eAJzB,4BASA,wBACEc,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAoB,IAARd,IACpDe,QAAS,WAELd,GADU,IAARD,IAJR,qBAcCF,EAAKY,OAAS,GAAKV,EAEhB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAQ,IACRE,GAAO,IALX,mBAWE,MAGR,6BACIC,EAAcc,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,aChGxDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7ee5d0b5.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sortWithRevers(goods, typeSort, reverse) {\n  let cloneGoods = [...goods];\n\n  switch (typeSort) {\n    case 'alfabet':\n      cloneGoods.sort((a, b) => (a.localeCompare(b)));\n      break;\n    case 'wordlength':\n      cloneGoods.sort((a, b) => (a.length - b.length));\n      break;\n    case '':\n      cloneGoods = [...goods];\n      break;\n    default:\n      break;\n  }\n\n  if (reverse) {\n    cloneGoods.reverse();\n  }\n\n  return cloneGoods;\n}\n\nexport const App = () => {\n  const [sort, setSort] = useState('');\n  const [rev, setRev] = useState(false);\n  const visibleGoods = sortWithRevers(goodsFromServer, sort, rev);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sort !== 'alfabet' })}\n          onClick={() => setSort('alfabet')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sort !== 'wordlength' })}\n          onClick={() => setSort('wordlength')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': rev === false })}\n          onClick={() => {\n            if (rev === false) {\n              setRev(true);\n            } else {\n              setRev(false);\n            }\n          }}\n\n        >\n          Reverse\n        </button>\n        {sort.length > 0 || rev\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSort('');\n                setRev(false);\n              }\n              }\n            >\n              Reset\n            </button>\n          ) : ''}\n\n      </div>\n      <ul>\n        {(visibleGoods).map(good => <li data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}